{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","title","genre","year","movies","setMovies","movie","setMovie","handleChange","e","target","name","value","prevInput","useEffect","fetch","then","res","ok","json","jsonRes","className","onChange","onClick","preventDefault","empt1","document","forms","empt2","empt3","alert","isNaN","newMovie","axios","post","map","key","id","_id","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mPAkGeA,MA9Ff,WAAgB,IAAD,EACeC,mBAAS,CACnC,CACEC,MAAO,GACPC,MAAO,GACPC,KAAM,MALG,mBACNC,EADM,KACEC,EADF,OASaL,mBACxB,CACEC,MAAO,GACPC,MAAO,GACPC,KAAM,KAbG,mBASNG,EATM,KASCC,EATD,KAyBb,SAASC,EAAaC,GAAI,IAAD,EACDA,EAAEC,OAAjBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACbL,GAAS,SAAAM,GACP,kCAEOA,GAFP,kBAGKF,EAAOC,OAoChB,OAlDAE,qBAAU,WACRC,MAAM,WAAWC,MAAK,SAAAC,GACpB,GAAGA,EAAIC,GACL,OAAOD,EAAIE,UAEZH,MAAK,SAAAI,GAAO,OAAIf,EAAUe,SA8C7B,sBAAKC,UAAU,MAAf,UACE,kDACA,2CACA,uBAAMV,KAAK,OAAX,UACE,2CAAa,uBAAOW,SAAUd,EAAcG,KAAK,QAAQC,MAAON,EAAML,WACtE,2CAAa,uBAAOqB,SAAUd,EAAcG,KAAK,QAAQC,MAAON,EAAMJ,MAAOmB,UAAU,UACvF,0CAAY,uBAAOC,SAAUd,EAAcG,KAAK,OAAOC,MAAON,EAAMH,KAAMkB,UAAU,UACpF,wBAAQE,QAtCd,SAAkBd,GAChBA,EAAEe,iBAEF,IAAIC,EAAQC,SAASC,MAAT,WAAgCf,MACxCgB,EAAQF,SAASC,MAAT,WAAgCf,MACxCiB,EAAQH,SAASC,MAAT,UAA+Bf,MAE3C,GAAa,MAATa,GAA2B,KAAVA,GAAyB,MAATG,GAA2B,KAAVA,GAAwB,MAATC,GAA2B,KAAVA,EAEpF,OADAC,MAAM,mCACC,EAEJ,GAAGC,MAAMF,GACZC,MAAM,uCAEH,CACHA,MAAM,oBACN,IAAME,EAAW,CACf/B,MAAOK,EAAML,MACbC,MAAOI,EAAMJ,MACbC,KAAMG,EAAMH,MAEd8B,IAAMC,KAAK,YAAaF,KAiBtB,0BAGF,qBAAKX,UAAU,iBAAf,SACCjB,EAAO+B,KAAI,SAAC7B,EAAO8B,GAClB,OACI,sBAAef,UAAU,YAAzB,UACE,6BAAKf,EAAML,QACX,4BAAIK,EAAMJ,QACV,4BAAII,EAAMH,OACV,wBAAQoB,QAAS,kBAvBRc,EAuB0B/B,EAAMgC,IAtBnDL,IAAMM,OAAO,WAAaF,QAC1BP,MAAM,iBAFR,IAAqBO,GAuBsChB,UAAU,SAAzD,sBAJQe,YCzEPI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BX,M","file":"static/js/main.a7a61bc6.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\nimport './App.css';\nimport axios from \"axios\";\n\nfunction App() {\n  const [movies, setMovies] = useState([\n    {\n      title: '',\n      genre: '',\n      year: ''\n    }\n  ])\n\n  const [movie, setMovie] = useState(\n    {\n      title: '',\n      genre: '',\n      year: ''\n    }\n  )\n\n  useEffect(() => {\n    fetch('/movies').then(res => {\n      if(res.ok) {\n        return res.json()\n      }\n    }).then(jsonRes => setMovies(jsonRes))\n  })\n\n  function handleChange(e) {\n    const {name, value} = e.target;\n    setMovie(prevInput => {\n      return(\n        {\n          ...prevInput,\n          [name]: value\n        }\n      )\n    })\n  }\n\n  function addMovie(e) {\n    e.preventDefault();\n\n    let empt1 = document.forms[\"Form\"][\"title\"].value;\n    let empt2 = document.forms[\"Form\"][\"genre\"].value;\n    let empt3 = document.forms[\"Form\"][\"year\"].value;\n\n    if (empt1 == null || empt1 === \"\" || empt2 == null || empt2 === \"\"|| empt3 == null || empt3 === \"\") {\n      alert(\"Please Fill All Required Field\");\n      return false;\n    }\n    else if(isNaN(empt3)){\n      alert('Error, Please enter only number');\n    }\n    else {\n      alert(\"New Movie Added!\");\n      const newMovie = {\n        title: movie.title,\n        genre: movie.genre,\n        year: movie.year\n      }\n      axios.post('/newmovie', newMovie);\n    }\n  }\n\n  function deleteMovie(id) {\n    axios.delete('/delete/' + id);\n    alert(\"movie deleted\");\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>MERN APPLICATION</h1>\n      <h2>Add Movie</h2>\n      <form name=\"Form\">\n        <label>Title <input onChange={handleChange} name=\"title\" value={movie.title} /></label>\n        <label>Genre <input onChange={handleChange} name=\"genre\" value={movie.genre} className=\"rt\"/></label>\n        <label>Year <input onChange={handleChange} name=\"year\" value={movie.year} className=\"rt\"/></label>\n        <button onClick={addMovie}>Add Movie</button>\n      </form>\n\n      <div className=\"grid-container\">\n      {movies.map((movie, key) => {\n        return (\n            <div key={key} className=\"grid-item\">\n              <h3>{movie.title}</h3>\n              <p>{movie.genre}</p>\n              <p>{movie.year}</p>\n              <button onClick={() => deleteMovie(movie._id)} className=\"btnDel\">Delete</button>\n            </div>\n        ) \n      })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}